From 72c8de0ab3455cc6b8ba6e54bd1aa901ab558b21 Mon Sep 17 00:00:00 2001
From: Soenke Huster <shuster@seemoo.tu-darmstadt.de>
Date: Fri, 9 Dec 2022 09:17:52 +0100
Subject: [PATCH] Annotate mac80211_hwsim

---
 drivers/net/wireless/mac80211_hwsim.c | 16 +++++++++++++---
 net/mac80211/main.c                   |  6 +++++-
 net/mac80211/rx.c                     |  4 ++--
 3 files changed, 20 insertions(+), 6 deletions(-)

diff --git a/drivers/net/wireless/mac80211_hwsim.c b/drivers/net/wireless/mac80211_hwsim.c
index 0d81098c7b45..39eaa82b0a4e 100644
--- a/drivers/net/wireless/mac80211_hwsim.c
+++ b/drivers/net/wireless/mac80211_hwsim.c
@@ -4786,6 +4786,9 @@ static void hwsim_register_wmediumd(struct net *net, u32 portid)
 	spin_unlock_bh(&hwsim_radio_lock);
 }
 
+extern void kcov_ivshmem_stop(void);
+extern void kcov_ivshmem_stop_nobarrier(void);
+extern void kcov_ivshmem_start(void);
 static int hwsim_tx_info_frame_received_nl(struct sk_buff *skb_2,
 					   struct genl_info *info)
 {
@@ -4880,6 +4883,7 @@ static int hwsim_tx_info_frame_received_nl(struct sk_buff *skb_2,
 	ieee80211_tx_status_irqsafe(data2->hw, skb);
 	return 0;
 out:
+	kcov_ivshmem_stop();
 	return -EINVAL;
 
 }
@@ -4995,6 +4999,7 @@ static int hwsim_cloned_frame_received_nl(struct sk_buff *skb_2,
 	pr_debug("mac80211_hwsim: error occurred in %s\n", __func__);
 out:
 	dev_kfree_skb(skb);
+	kcov_ivshmem_stop();
 	return -EINVAL;
 }
 
@@ -5513,13 +5518,16 @@ static int hwsim_virtio_handle_cmd(struct sk_buff *skb)
 	nlh = nlmsg_hdr(skb);
 	gnlh = nlmsg_data(nlh);
 
-	if (skb->len < nlh->nlmsg_len)
+	if (skb->len < nlh->nlmsg_len) {
+		kcov_ivshmem_stop();
 		return -EINVAL;
+	}
 
 	err = genlmsg_parse(nlh, &hwsim_genl_family, tb, HWSIM_ATTR_MAX,
 			    hwsim_genl_policy, NULL);
 	if (err) {
 		pr_err_ratelimited("hwsim: genlmsg_parse returned %d\n", err);
+		kcov_ivshmem_stop();
 		return err;
 	}
 
@@ -5534,6 +5542,7 @@ static int hwsim_virtio_handle_cmd(struct sk_buff *skb)
 		break;
 	default:
 		pr_err_ratelimited("hwsim: invalid cmd: %d\n", gnlh->cmd);
+		kcov_ivshmem_stop();
 		return -EPROTO;
 	}
 	return 0;
@@ -5557,10 +5566,13 @@ static void hwsim_virtio_rx_work(struct work_struct *work)
 		goto out_unlock;
 	spin_unlock_irqrestore(&hwsim_virtio_lock, flags);
 
+	kcov_ivshmem_start();
+
 	skb->data = skb->head;
 	skb_reset_tail_pointer(skb);
 	skb_put(skb, len);
 	hwsim_virtio_handle_cmd(skb);
+	kcov_ivshmem_stop_nobarrier();
 
 	spin_lock_irqsave(&hwsim_virtio_lock, flags);
 	if (!hwsim_virtio_enabled) {
@@ -5575,7 +5587,6 @@ static void hwsim_virtio_rx_work(struct work_struct *work)
 	else
 		virtqueue_kick(vq);
 	schedule_work(&hwsim_virtio_rx);
-
 out_unlock:
 	spin_unlock_irqrestore(&hwsim_virtio_lock, flags);
 }
@@ -5664,7 +5675,6 @@ static int hwsim_virtio_probe(struct virtio_device *vdev)
 	spin_lock_irqsave(&hwsim_virtio_lock, flags);
 	hwsim_virtio_enabled = true;
 	spin_unlock_irqrestore(&hwsim_virtio_lock, flags);
-
 	schedule_work(&hwsim_virtio_rx);
 	return 0;
 
diff --git a/net/mac80211/main.c b/net/mac80211/main.c
index 02b5abc7326b..4341037a538f 100644
--- a/net/mac80211/main.c
+++ b/net/mac80211/main.c
@@ -300,19 +300,23 @@ u32 ieee80211_reset_erp_info(struct ieee80211_sub_if_data *sdata)
 	       BSS_CHANGED_ERP_SLOT;
 }
 
+extern void kcov_ivshmem_stop(void);
+extern void kcov_ivshmem_start_nobarrier(void);
+
 static void ieee80211_tasklet_handler(struct tasklet_struct *t)
 {
 	struct ieee80211_local *local = from_tasklet(local, t, tasklet);
 	struct sk_buff *skb;
-
 	while ((skb = skb_dequeue(&local->skb_queue)) ||
 	       (skb = skb_dequeue(&local->skb_queue_unreliable))) {
 		switch (skb->pkt_type) {
 		case IEEE80211_RX_MSG:
 			/* Clear skb->pkt_type in order to not confuse kernel
 			 * netstack. */
+			kcov_ivshmem_start_nobarrier();
 			skb->pkt_type = 0;
 			ieee80211_rx(&local->hw, skb);
+			kcov_ivshmem_stop();
 			break;
 		case IEEE80211_TX_STATUS_MSG:
 			skb->pkt_type = 0;
diff --git a/net/mac80211/rx.c b/net/mac80211/rx.c
index f99416d2e144..152edf1a988a 100644
--- a/net/mac80211/rx.c
+++ b/net/mac80211/rx.c
@@ -5251,7 +5251,7 @@ void ieee80211_rx_list(struct ieee80211_hw *hw, struct ieee80211_sta *pubsta,
 
 	status->rx_flags = 0;
 
-	kcov_remote_start_common(skb_get_kcov_handle(skb));
+	//kcov_remote_start_common(skb_get_kcov_handle(skb));
 
 	/*
 	 * Frames with failed FCS/PLCP checksum are not returned,
@@ -5272,7 +5272,7 @@ void ieee80211_rx_list(struct ieee80211_hw *hw, struct ieee80211_sta *pubsta,
 			__ieee80211_rx_handle_packet(hw, pubsta, skb, list);
 	}
 
-	kcov_remote_stop();
+	//kcov_remote_stop();
 	return;
  drop:
 	kfree_skb(skb);
-- 
2.38.1

